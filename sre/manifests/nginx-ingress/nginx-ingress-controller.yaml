apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---

apiVersion: v1
data:
  # self-signed cert for local testing purpose only. Would need better encryption method in production usage.
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNwRENDQVl3Q0NRRGlxSEdvM2pPSFhUQU5CZ2txaGtpRzl3MEJBUXNGQURBVU1SSXdFQVlEVlFRRERBbHMKYjJOaGJHaHZjM1F3SGhjTk1qQXdOakEzTVRjMU1qUTNXaGNOTWpFd05qQTNNVGMxTWpRM1dqQVVNUkl3RUFZRApWUVFEREFsc2IyTmhiR2h2YzNRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvCkpkZ2VFbysxbUpkcVFSWmlmZ3FnOVJEcFMvdUU2T2M4SVNtcHlubTkyV0xWRnhlMkpNWm5VbkNzSzFyWjVpSjgKNmJKbUw4UHIxNExSTVJaazl6cGt4MS9Gb1RCeWgvZ0Fsc3dOazBqS0QzU1NMNW56VXhrQTlCNFpGTHd4T2Z6RgozWWc1MiszcXNKeUt3amsydDh3TEU1WW9HRjNEQlVIdVFOQ3d5cm04Zk9McGhBWjJIa2VvREROZ3JMZithRlkzCjF2bUVnNmFwRjJJdDl1RkMreEpWc1d0UWxNRzBvbkpkKzBkR2hZelVuNlA5T2czTzlwWWJPbWRKWGJZeUlacysKS0F2RGRubUJyS3NPTUFuLzZoWUgyaGtNU0twQjRhZkRiYkhOYXpHREs4QUNZUXNwRU1ESHl6Y0xGTXVIbkhGRApCWHg5OFlwSVAyODhnQWZ5MVNLakFnTUJBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUp3MmJVaHAwY0RMCnBDb1hMOFJLUG9ZbDBZWFp4ckdQQkxmc3NzS25ESzgwZC84ZUdiK21sbFdEVFRmVlRPSngxZ3RkaUpaaEwvY0gKY0x6RzhyaUk1VldjQThtVVhmUGxTK2F5M1NTU2NNV2VkWklOZExtOE5CZndRWGNSQ1R3YXhsSjhlanhmSU5CegpLTFBIVGV5NzF3WnVJdExZck1UenNOQjNwa1l2L3JPSGdZbGhlMDhkb2FlNGxuMjA4eCs1Rk5QMnZPZzJVWU5ICk1LMFNhcHUvYlBJMmhsR2FKRVk4U3FxWVNobStRK3FQTHJ2bEF3VTdRbzVOK1FaY0w2aVgrczJ1dlFXU0Y3cVkKVVVNZHdKMnhDajVTWjVIRXMvMC8rOTcrdGo2dS9kMmhqc1g1Z0dyazA1aG1qUWFYeExiSHkxYXNzZ09uVU9MZgoxcERsRUd2YXk2QT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQy9KZGdlRW8rMW1KZHEKUVJaaWZncWc5UkRwUy91RTZPYzhJU21weW5tOTJXTFZGeGUySk1ablVuQ3NLMXJaNWlKODZiSm1MOFByMTRMUgpNUlprOXpwa3gxL0ZvVEJ5aC9nQWxzd05rMGpLRDNTU0w1bnpVeGtBOUI0WkZMd3hPZnpGM1lnNTIrM3FzSnlLCndqazJ0OHdMRTVZb0dGM0RCVUh1UU5Dd3lybThmT0xwaEFaMkhrZW9ERE5nckxmK2FGWTMxdm1FZzZhcEYySXQKOXVGQyt4SlZzV3RRbE1HMG9uSmQrMGRHaFl6VW42UDlPZzNPOXBZYk9tZEpYYll5SVpzK0tBdkRkbm1CcktzTwpNQW4vNmhZSDJoa01TS3BCNGFmRGJiSE5hekdESzhBQ1lRc3BFTURIeXpjTEZNdUhuSEZEQlh4OThZcElQMjg4CmdBZnkxU0tqQWdNQkFBRUNnZ0VBZVdrMVE2eXdnVDBCOStpTnFsTzZ0by9TaFF6UkhwTzh4RkdnSUF2T2xncnQKSHNLRE9odFR0aThFQ0NlbGxqLzU2Zk9hY0JPbzB6VlpEenlwcDhuczJqUlZIYmVMaVVQWi82M0l3RnFyNGtROAoyOW5HWkdxRXVEbFdvTUd0NDJxY3BxVldzTUdEOWd6bDhiRDZIRXBVSFRqOHFFMEp5U1Nld3hHQ1BMa1hqcU4vCmpEMGZuZFBLL1JFZzh6bStnTG9QQ3M4WlM3cDVoZVRnWm4wV0FMY3A5UkNicnNDczB6MFdpWWZtSTdJdjdlamEKNEhzQlFsZzBXbjcybUNHcXNhM1JUeVZVNWt4Njl5cGtQQnhqMHgzZHpBSUhWUVJQSHdDYkpQckx5U09LeHplRAp3d25rTGpBS25DaXNHZDlRVld0cWI4dzVSMzMwU0d1Zklmc3RVaFIva1FLQmdRRGVwODdjNVA0OE5VMVVoSGE4Cm1oNGVxMDYwL2FldnZxQkhZQnVOOVZHc3hSc3ZSNGNVNjZhZWh6TzNTdlRWRjduU1hza25URDIxUlp2LzdFZVAKdjBGOFlYMUtOakNtZHUyYkdtREVMbERCN3JOdnFjNElST1BLbFlGenhWS0pEUnpFS1h0QUxwa3Y1bCtiVGtTUQpCRnJUcDFPS1RRcGt0V2ZuSUVTRnFkNEhPd0tCZ1FEYnhoZHAwSklaM3RqVnl3clhxaE16cWI1RTEyeDZlS2RSCldFNHdlbHVhWkFESjE3ZVN5OXpFRmR5d2NCMkc4QzB5QW5tcjlqejZuMlMva2dYYXFYVmI4VXU4QURSK0VsVkQKanhJNkFnWlk5cXQ3NzkzTVh3SjgzbnEzcWZJNDB3ZTlTQWltSHkrOHBFVkdVelNmRmk4Y2s2YzJ6b1FmaWMxZQpaR0Z5RGRFcnVRS0JnRGEveHFNVWY5dG9NK3FyWTlMK2hwZCtBaTJKRGRtdUl4Vko4WnlYalF6UnJ0eVNWd255CjVCYXBJak5ZOEJrUjYzUnFNRVpFZmd2NzROOHVSMjUyVmZEeXUrOHFvZzNjd3BKWUN5RlNUak5Sc2Jlc1ptZ3MKSUdNcEhock1rMzMxeG5RSnl5KytCWmI4cTlleGlEUnRqYlBydWlRUXk1UjE4dVduVHBJYmNlZ1BBb0dBS280Vwo1b1JlWmVnQ3NKTWFURnhBVDVha293dmJrM05kWXFEb3N2WmVXbXpXd2o2azZ5WFNYNTJrRi8zOW1hMVQ4d1VMCnJrS0YyRG1ZOW9jOTN2TkZLRUoyMmJab2M2ajFIWm5NZTdMOHE2bEgxejNCQXR1NnpaYit5Q1YrSTRhcFR2dHQKd1V6MG4yQm5rWkIyOWY4RHJGTGk0L2ZsR1g1RForMmorTU80SnZFQ2dZRUFnaG9JZWlRVEVZT21kTDFNNE54cApTZUFQUUpZVkxSQU1hMVRlR0RiNmZHWUJEYllRWEd0bWN3THY3dDlEZC9TbjlRQ1VsWEZ3MEtvdWlwWE5QbER1CjllbEMwTHN2Y0ZlMVQyd0ZxOFQySHN1TmtHSzRlL2plMHpTMGtDWThGbnZpcUF0ejcyWi9uTkttWDNDazhPUlcKMUtSb0o2dndFcWxjdXpxWk9mQ29BZVk9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: nginx-tls
  namespace: ingress-nginx
type: kubernetes.io/tls

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nginx-ingress-clusterrole
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-role
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<ingress-controller-leader>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-role-nisa-binding
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: ingress-nginx

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-clusterrole-nisa-binding
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: ingress-nginx

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      # wait up to five minutes for the drain of connections
      terminationGracePeriodSeconds: 300
      serviceAccountName: nginx-ingress-serviceaccount
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/ingress: ''
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.32.0
          args:
            - /nginx-ingress-controller
            - --default-ssl-certificate=$(POD_NAMESPACE)/nginx-tls
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 101
            runAsUser: 101
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
              hostPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              hostPort: 443
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown

---

apiVersion: v1
kind: LimitRange
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  limits:
  - min:
      memory: 90Mi
      cpu: 100m
    type: Container
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
